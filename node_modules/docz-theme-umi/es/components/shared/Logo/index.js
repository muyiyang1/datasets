import * as React from 'react';
import { useConfig } from 'docz';
import styled from 'styled-components';
import { breakpoints } from "../../../styles/responsive";
import { get } from "../../../utils/theme";
var sidebarPrimary = get('colors.sidebarPrimary');
var primaryColor = get('colors.primary');
var Wrapper = styled.div.withConfig({
  displayName: "Logo__Wrapper"
})(["position:relative;display:flex;flex-direction:column;align-items:flex-start;justify-content:center;padding:24px;a,a:hover,a:visited{text-decoration:none;}&:before{position:absolute;content:'';top:0;left:0;width:100%;height:3px;background:", ";}@media screen and (max-width:", "px){&:before{height:", ";}}", ";"], function (p) {
  return sidebarPrimary(p) || primaryColor(p);
}, breakpoints.desktop, function (p) {
  return p.showBg ? '3px' : 0;
}, get('styles.logo'));
var LogoImg = styled('img').withConfig({
  displayName: "Logo__LogoImg"
})(["padding:0;margin:5px 0;"]);
var LogoText = styled('h1').withConfig({
  displayName: "Logo__LogoText"
})(["margin:5px 0;font-size:24px;font-weight:600;letter-spacing:-0.015em;color:", ";"], get('colors.sidebarText'));
export var Logo = function Logo(_ref) {
  var showBg = _ref.showBg;

  var _useConfig = useConfig(),
      title = _useConfig.title,
      Link = _useConfig.linkComponent,
      logo = _useConfig.themeConfig.logo;

  if (!Link) return null;
  return React.createElement(Wrapper, {
    showBg: showBg
  }, React.createElement(Link, {
    to: "/"
  }, logo ? React.createElement(LogoImg, {
    src: logo.src,
    width: logo.width,
    alt: title
  }) : React.createElement(LogoText, null, title)));
};