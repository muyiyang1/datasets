function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import * as React from 'react';
import { useState, useEffect } from 'react';
import styled from 'styled-components';
import { get as themeGet } from "../../../utils/theme";
var sidebarPrimary = themeGet('colors.sidebarPrimary');
var primaryColor = themeGet('colors.primary');
var Link = styled.a.withConfig({
  displayName: "SmallLink__Link"
})(["position:relative;font-size:14px;padding:0 0 5px 16px;text-decoration:none;opacity:0.5;transition:opacity 0.2s;&,&:visited,&.active{color:", ";}&.active{opacity:1;}&:before{z-index:1;position:absolute;display:block;content:'';top:1px;left:0;width:0;height:20px;background:", ";transition:width 0.2s;}&.active:before{width:2px;}"], themeGet('colors.sidebarText'), function (p) {
  return sidebarPrimary(p) || primaryColor(p);
});
export var SmallLink = function SmallLink(_ref) {
  var Component = _ref.as,
      slug = _ref.slug,
      location = _ref.location,
      props = _objectWithoutProperties(_ref, ["as", "slug", "location"]);

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      isActive = _useState2[0],
      setActive = _useState2[1];

  useEffect(function () {
    var currentHash = location.hash && location.hash.slice(1, Infinity);
    setActive(Boolean(slug === currentHash));
  }, [location]);
  return React.createElement(Link, _extends({
    as: Component
  }, props, {
    className: isActive ? 'active' : ''
  }));
};