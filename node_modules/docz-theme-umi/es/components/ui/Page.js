import * as React from 'react';
import { Fragment } from 'react';
import { useConfig } from 'docz';
import Edit from 'react-feather/dist/icons/edit-2';
import styled from 'styled-components';
import { ButtonLink } from "./Button";
import { GithubLink, Sidebar, Main } from "../shared";
import { get } from "../../utils/theme";
import { mq } from "../../styles/responsive";
var Wrapper = styled.div.withConfig({
  displayName: "Page__Wrapper"
})(["flex:1;color:", ";background:", ";min-width:0;position:relative;"], get('colors.text'), get('colors.background'));
export var Container = styled.div.withConfig({
  displayName: "Page__Container"
})(["box-sizing:border-box;margin:0 auto;", " ", ";"], mq({
  width: ['100%', '100%', 920],
  padding: ['20px', '0 40px 40px']
}), get('styles.container'));
var EditPage = styled(ButtonLink.withComponent('a')).withConfig({
  displayName: "Page__EditPage"
})(["display:flex;align-items:center;justify-content:center;position:absolute;padding:2px 8px;margin:8px;border-radius:", ";border:1px solid ", ";opacity:0.7;transition:opacity 0.4s;font-size:14px;color:", ";text-decoration:none;text-transform:uppercase;&:hover{opacity:1;background:", ";}", ";"], get('radii'), get('colors.border'), get('colors.text'), get('colors.border'), mq({
  visibility: ['hidden', 'hidden', 'visible'],
  top: [0, -60, 32],
  right: [0, 0, 40]
}));
var EditIcon = styled(Edit).withConfig({
  displayName: "Page__EditIcon"
})(["margin-right:5px;"]);
export var Page = function Page(_ref) {
  var children = _ref.children,
      _ref$doc = _ref.doc,
      link = _ref$doc.link,
      fullpage = _ref$doc.fullpage,
      _ref$doc$edit = _ref$doc.edit,
      edit = _ref$doc$edit === void 0 ? true : _ref$doc$edit;

  var _useConfig = useConfig(),
      repository = _useConfig.repository;

  var content = React.createElement(Fragment, null, link && edit && React.createElement(EditPage, {
    href: link,
    target: "_blank"
  }, React.createElement(EditIcon, {
    width: 14
  }), " Edit page"), children);
  return React.createElement(Main, null, repository && React.createElement(GithubLink, {
    repository: repository
  }), !fullpage && React.createElement(Sidebar, null), React.createElement(Wrapper, null, fullpage ? content : React.createElement(Container, null, content)));
};