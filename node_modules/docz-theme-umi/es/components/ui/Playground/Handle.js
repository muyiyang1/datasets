import lighten from 'polished/lib/color/lighten';
import darken from 'polished/lib/color/darken';
import styled, { css } from 'styled-components';
import { get } from "../../../utils/theme";
export var HANDLE_SIZE = '20px';
var borderColor = get('colors.border');
var preBg = get('colors.preBg');
var mode = get('mode');

var getLineBackground = function getLineBackground(p) {
  return mode(p) === 'light' ? darken(0.05, borderColor(p)) : lighten(0.06, borderColor(p));
};

var line = function line(position) {
  return function (p) {
    return css(["content:'';position:absolute;display:block;top:", ";left:", ";width:", ";height:", ";background:", ";transform:translate(-50%,-50%);"], p.horizontal ? '50%' : position, p.horizontal ? position : '50%', p.horizontal ? '2px' : '25px', p.horizontal ? '25px' : '2px', getLineBackground);
  };
};

var whenHorizontal = function whenHorizontal(on, off) {
  return function (p) {
    return p.horizontal ? on : off;
  };
};

var handleHeight = function handleHeight(p) {
  return p.horizontal ? "calc(100% ".concat(p.full ? '+ 3px' : '- 2px', ")") : HANDLE_SIZE;
};

export var Handle = styled.div.withConfig({
  displayName: "Handle"
})(["z-index:", ";position:absolute;display:block;width:", ";height:", ";border:1px solid ", ";border-radius:", ";background:", ";box-sizing:content-box;", ";&:after{", ";}&:before{", ";}"], function (p) {
  return p.full ? p.horizontal ? 9999 : 9998 : 9;
}, whenHorizontal(HANDLE_SIZE, 'calc(100% + 3px)'), handleHeight, function (p) {
  return lighten(0.03, borderColor(p));
}, whenHorizontal('0 4px 4px 0', '0 0 4px 4px'), function (p) {
  return darken(0.01, preBg(p));
}, whenHorizontal("\n      top: 0;\n      right: 0;\n    ", "\n      bottom: 0;\n      left: 0;\n    "), line('calc(50% + 3px)'), line('calc(50% - 3px)'));