function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import * as colors from "./colors";
export var light = _objectSpread({}, colors, {
  primary: colors.blue,
  text: colors.grayDark,
  link: colors.blue,
  footerText: colors.grayDark,
  sidebarBg: colors.grayExtraLight,
  sidebarText: colors.dark,
  sidebarHighlight: null,
  sidebarBorder: colors.grayLight,
  background: colors.white,
  border: colors.grayLight,
  theadColor: colors.gray,
  theadBg: colors.grayExtraLight,
  tableColor: colors.dark,
  tooltipBg: colors.dark,
  tooltipColor: colors.grayExtraLight,
  codeBg: colors.grayExtraLight,
  codeColor: colors.gray,
  preBg: colors.grayExtraLight,
  blockquoteBg: colors.grayExtraLight,
  blockquoteBorder: colors.grayLight,
  blockquoteColor: colors.gray
});
export var dark = _objectSpread({}, colors, {
  primary: colors.skyBlue,
  text: colors.grayExtraLight,
  link: colors.skyBlue,
  footerText: colors.grayLight,
  sidebarBg: colors.dark,
  sidebarText: colors.grayLight,
  sidebarHighlight: null,
  sidebarBorder: colors.grayDark,
  background: colors.grayExtraDark,
  border: colors.grayDark,
  theadColor: colors.gray,
  theadBg: colors.grayDark,
  tableColor: colors.grayExtraLight,
  tooltipBg: colors.dark,
  tooltipColor: colors.grayExtraLight,
  codeBg: colors.gray,
  codeColor: colors.grayExtraLight,
  preBg: colors.grayDark,
  blockquoteBg: colors.grayDark,
  blockquoteBorder: colors.gray,
  blockquoteColor: colors.gray
});